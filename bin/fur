#!/usr/bin/env node

/**
 * @file fur command line interface.
 * @author Taka Okunishi
 *
 */

var color = require('cli-color'),
    program = require('commander'),
    commands = require('../lib/commands');

program.version(require('../package.json').version);

program
    .command('favicon <filename>')
    .description('Generate a favicon.')
    .option('-C, --color-theme [colorTheme]', 'Color theme name.')
    .option('-F, --font-theme [fontTheme]', 'Font theme name.')
    .option('-s, --size [size]', 'Image size')
    .option('-f, --font-size [fontSize]', 'Font size')
    .option('-S, --style [style]', 'Image style. "simple".')
    .option('-t, --text [text]', 'Text to print on favicon.')
    .option('-L, --text-left [textLeft]', 'Text left position.')
    .option('-T, --text-top [textTop]', 'Text top position.')
    .action(commands.favicon.bind(commands));

program
    .command('logo <filename>')
    .description('Generate a logo.')
    .option('-C, --color-theme [colorTheme]', 'Color theme name.')
    .option('-F, --font-theme [fontTheme]', 'Font theme name.')
    .option('-w, --width [width]', 'Image width')
    .option('-h, --height [height]', 'Image height')
    .option('-f, --font-size [fontSize]', 'Font size')
    .option('-S, --style [style]', 'Image style. "simple".')
    .option('-t, --text [text]', 'Text to print on logo.')
    .option('-L, --text-left [textLeft]', 'Text left position.')
    .option('-T, --text-top [textTop]', 'Text top position.')
    .action(commands.logo.bind(commands));


program
    .command('badge <filename>')
    .description('Generate a badge.')
    .option('-C, --color-theme [theme]', 'Color theme name.')
    .option('-S, --style [style]', 'Image style. "default" or "flat".')
    .option('-t, --texts [texts]', 'Texts to print on badge.Comma separated.')
    .action(commands.badge.bind(commands));

program
    .command('ico <src> <dest>')
    .description('Convert a png file to ico file.')
    .action(commands.ico.bind(commands));


program
    .command('resize <src> <dest>')
    .description('Resize a image.')
    .option('-w, --width [width]', 'Image width.')
    .option('-h, --height [height]', 'Image height.')
    .action(commands.resize.bind(commands));

program.parse(process.argv);

if (process.argv.length < 3) {
    program.help();
}

